language: python

cache: pip

services:
- postgresql
- rabbitmq

addons:
  postgresql: "10.6"

matrix:
  include:
    - python: 3.6
      env: TEST_TYPE="pre-commit"
    - python: 3.6
      env: TEST_TYPE="pytest" TEST_AIIDA_BACKEND="django" PYPI_DEPLOY=true
    - python: 2.7
      env: TEST_TYPE="pytest" TEST_AIIDA_BACKEND="django"

  # allow_failures:
  #   - env: TEST_TYPE="docs" READTHEDOCS="True"

install:
# Upgrade pip setuptools and wheel
- pip install -U wheel setuptools "reentry>=1.3"
- |
    if [[ "$TEST_TYPE" == "pre-commit" ]]; then
      pip uninstall -y numpy
      pip install -e .[code_style]
    fi
- |
    if [[ "$TEST_TYPE" == "pytest" ]]; then
      pip uninstall -y numpy
      pip install -e .[testing]
      pip install coveralls
    fi

before_script:
- reentry scan

script:
- |
  if [[ "$TEST_TYPE" == "pytest" ]]; then
      pytest -v --cov=aiida_icl --cov=examples --cov-config .coveragerc --cov-report= aiida_icl
  fi
- |
  if [[ "$TEST_TYPE" == "pre-commit" ]]; then
    pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )
  fi

after_success:
- coveralls

deploy:
  - provider: pypi
    distributions: "sdist bdist_wheel"
    user: cjsewell
    password:
      secure: sFh2CTqmk/ix8ytXUJDuWUC6ZSOYwpEp0T/a94jamx0N5jFuDKUY4mbp3BCBRMSXPe1aSc1t822amGrRS4aCERXL8rsceKrmnRk3U6XxQBYKY0ns1gB+8/5N8bqqHfOfDy7v1w0qUmYxB6tTXrFjtG5Ib17li/DBbqbxPpxrZzSlHsIUBM6AoutuUUMUQI0xVNOIDiRRB90gWerEfdVBwvgc+ylIWgDxTTR7BbZgrFLofDkbrWvJAmTltb8CWq6IlaGSNnfkYZVh+PRxrXcN0TEUfA/v9P9EZxXoWbOaAdVuJrmZsMleLBUFUc2O1nBitE9coP0QCYzTDIOvHCmCI3unpuhTILz6ExfoBe8AysLdfOm3L9hLkYKjlNqwy/562tz68XuT92MDj3eSRege4nGaYfOMmGZPxuYLvRmTywi72S5B6T2ZHCfKlHOMsJ2gjaXVypI7S8kJDnixK4iEeilWpjpXa7YcNGxKNXmpQgZxN9u3SlcG8jsZaQqOz3DNnTco+Gqb1buOwbr9WQKIyt9cyXtlRmwy5KXLukCTS0kbLZoPutV+os/DEARIS00hNVDD8wyU8zUSFiCUdFsHwYj+DLiJFfL8yStAMuFRsVYE/LiPYpT8puFIbTm8Ja7x1ZfL19o8ZrCdT9fJggf9dHgnIqJT9r+wrbzEtD1IKqQ=
    on:
      branch: master
      tags: true
      condition: $PYPI_DEPLOY = true
